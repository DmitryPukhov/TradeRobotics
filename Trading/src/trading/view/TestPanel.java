/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package trading.view;

import java.awt.Cursor;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import trading.app.NeuralService;
import trading.common.NeuralContext;
import trading.common.PropertyNames;

/**
 *
 * @author pdg
 */
public class TestPanel extends javax.swing.JPanel {

    /**
     * Creates new form TestPanel
     */
    public TestPanel() {
        initComponents();
        
        // Neural network related initialization
        init();
    }

    /**
     * Neural network related initialization
     */
    public void init(){
        
        // Iteration listener
        NeuralContext.Test.addPropertyChangeListener(PropertyNames.ITERATION, new PropertyChangeListener(){
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                iterationLabel.setText(String.format("Iteration %d of %d", NeuralContext.Test.getIteration(), NeuralContext.Test.getMaxIterationCount()));
                iterationProgressBar.setMaximum(NeuralContext.Test.getMaxIterationCount());               
                iterationProgressBar.setValue(NeuralContext.Test.getIteration());
            }
        });
        
        NeuralContext.Test.addPropertyChangeListener(PropertyNames.REAL_OUTPUT_ENTITY, new PropertyChangeListener(){
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                
            }
        });
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startButton = new javax.swing.JButton();
        iterationProgressBar = new javax.swing.JProgressBar();
        iterationLabel = new javax.swing.JLabel();

        startButton.setText("Start test");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        iterationProgressBar.setStringPainted(true);

        iterationLabel.setText("Iteration");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(iterationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(iterationProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(iterationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iterationProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(222, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Start testing
     *
     * @param evt
     */
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
       final TestPanel form = this;
       setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
       // Run test in new thread
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    // Run test
                    NeuralService.test();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(TestPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(TestPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                finally{
                    form.setCursor(Cursor.getDefaultCursor());
                }
            }
        }).start();

    }//GEN-LAST:event_startButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iterationLabel;
    private javax.swing.JProgressBar iterationProgressBar;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
